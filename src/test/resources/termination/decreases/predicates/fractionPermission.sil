import <decreases/int_decreases.sil>
import <decreases/pred_decreases.sil>

field next: Ref

predicate list(this: Ref) {
  acc(this.next) &&
  (this.next != null ==> acc(list(this.next)))
}

function traverse(this: Ref): Int
    requires acc(list(this), 1/2)
    ensures decreases(list(this))
{
    unfolding acc(list(this), 1/2) in this.next == null  ? 1 : 1 + traverse(this.next)
}