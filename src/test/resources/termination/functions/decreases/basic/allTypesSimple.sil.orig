// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

import <decreases/importAllDec.sil>

//Example decreasing Int
function fact(x:Int): Int
requires x>=0
decreasea x
{
    x==0 ? 1 : x*fact(x-1)
}

//Example decreasing Reference
function references(r:Ref):Int
decreasea r
{
    r == null ? 1 : references(null)
}


//Example decreasing Booleans
function booleans(b: Bool): Int
ensures result == 1
decreasea b
{
    b ? 1 : booleans(true)
}


//Example decreasing Sequences (Integers)
function numberOfElements(seq:Seq[Int]): Int
ensures result == |seq|
decreasea seq
{
    |seq| != 0? 1+numberOfElements(seq[1..]) : 0
}


////Example decreasing Sequences (Booleans)
function numberOfUsers(seq:Seq[Bool]): Int
decreasea seq
{
    |seq| == 0 ? 0 :
    //:: UnexpectedOutput(termination.failed:termination.no.decrease, /silicon/issue/300/)
        seq[0] ? 1 + numberOfUsers(seq[1..]) : numberOfUsers(seq[1..])
}

//Example decreasing Set
function sets(s:Set[Int]):Int
decreasea s
{
    |s|>0 && (|s| in s) ? sets(s setminus Set(|s|)) : 1
}

//Example decreasing MulitSet
function multiSets(s: Multiset[Int]) : Int
decreasea s
{
    |s|>0 && (|s| in s) > 0 ? multiSets(s setminus Multiset(|s|)) : 1
}

method otherMultiSetTests()
{
    assert bounded(Multiset(1))
    assert decreasing(Multiset(1),Multiset(1,1))
    assert bounded(Multiset(1,2,3))
    assert decreasing(Multiset(1,2,3),Multiset(1,2,2,3,3))

     //:: ExpectedOutput(assert.failed:assertion.false)
    assert decreasing(Multiset(1,1),Multiset(1,1))

}

method otherMultiSetTests2()
{
    //:: ExpectedOutput(assert.failed:assertion.false)
    assert decreasing(Multiset(1),Multiset(2))
}