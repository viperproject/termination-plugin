// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

import <decreases/pred_decreases.sil>

field next: Ref

predicate list(this: Ref) {
  acc(this.next) &&
  (this.next != null ==> list(this.next))
}

// method does terminate!
method traverse(this: Ref)
    requires acc(list(this), 1/2)
    ensures acc(list(this), 1/2)
    ensures decreases(list(this))
{
    unfold acc(list(this), 1/2)
        if (this.next != null)
        {
            traverse(this.next)
        }
    fold acc(list(this), 1/2)
}