// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

import <decreases/pred_decreases.sil>

field next: Ref

predicate list(this: Ref) {
  acc(this.next) &&
  (this.next != null ==> list(this.next))
}


method append(this: Ref)
  requires list(this)
  ensures  list(this)
  ensures decreases(list(this))
{
  unfold list(this)
    if (this.next == null) {
      var n: Ref

      n := new(next)
      n.next := null
      this.next := n
      fold list(n)
    }
  fold list(this)

  unfold list(this)
    // never terminating!
    //:: ExpectedOutput(termination.failed:termination.no.decrease)
    append(this.next)
  fold list(this)
}