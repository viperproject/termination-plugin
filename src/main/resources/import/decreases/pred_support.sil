domain Loc{
}

domain nestedDomain{

    function nested(l1: Loc, l2: Loc) : Bool
    
    //Transitivity of the nested-Function
    axiom nestedTrans{
        forall l1: Loc, l2: Loc, l3: Loc ::
        nested(l1,l2) && nested(l2,l3) ==> nested(l1,l3)
    }
    
    //A predicate cannot be nested inside itself
    axiom nestedReflex{
        forall l1: Loc ::
        !nested(l1, l1)
    }
}